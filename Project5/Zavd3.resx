<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZUAAAA8CAYAAACuPyepAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAGRBJREFUeF7tnQnYVcMbwOtPKBUiLbRImyKypU2RhCRLSbSKyFIkS4o2S1mytyht
        KlqQVoVUtEsRQiJtCJUtu/n3e7/7XvOdzvd173fPud37Nb/nmeeeM2e958zMO+8yc/LAzJkzq8yaNasy
        v3bSPPvX3k/Xvfm6zV7PLs97vF+enW+v29vtPN3Xu7+9Hm/SY+3z6LI3L6v9WPZL9n76ax+T1a83z07e
        7Xbybs8qefexj/Vu9+b5JbbbyW+bLtv5uhzrNn7tZfs3q+2x7OOX58231+087zZvvm6LZd3Ot/M0Zbeu
        x9nJztf9vHne/ext3u2a57fNu5/m2ck+zm+b/trL9nZ73U72/t5j7GXv9uz20bSnfO92O99O9nY7z7ts
        76fLuu6X5/31W7b3sdf99rX30+W5c+eWy7NixYoi1apVe/Wee+4xmnr27Bld9kuJbk80xXL+rPbJKv/i
        iy82Z511lu+2nP6fsJ9Duie/5xPGs85q2958P/FeO5b9w/g/QZ4zyHPdcsstpkyZMtFzen/9UpDXjzcF
        fe298V9iuWb58uVfz/Puu+8ecd1115l9nRdffNE88sgjkTWHw5HKfP311+aCCy6IrDlSherVq7/ihEoE
        J1QcjvThm2++EaHy77//RnIcqYAIFcxfTqgY88ILL5hHH300suZwOFIZ1VScUEktTjrpJKepKAgVp6k4
        HOmBM3+lJs78ZYH5y2kqDkd6EJb5a8eOHWbEiBHmrrvukjRmzBjz66+/RrY69oQTKhbO/OVwpA9h+lT+
        /vtvU6lSJVOjRg3zzz//RHIdseCEioUzfzkc6UPYPpW6deuapk2bOp9NnDihYuHMXw5H+hB29JctVEh/
        /fVXNKG9oM3oOsvefextCvusX7/efPHFF5num2X+D/zwww+yXeFa3nPaxyrffvutWb16tZjvbOz7tJN9
        X0ESFSrXX399JGvfxYUUOxzpQzKFyu+//26eeeYZkydPHtOiRQvz+eefm7feeksGX5Lmzp1rnnrqKXPV
        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
</value>
  </data>
</root>